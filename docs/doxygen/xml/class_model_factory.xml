<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_model_factory" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ModelFactory</compoundname>
    <derivedcompoundref refid="class_random_model_factory" prot="public" virt="non-virtual">RandomModelFactory</derivedcompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_model_factory_1a426d446bda5d5894245f3c5a9f743805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_patch" kindref="compound">Patch</ref> * &gt;</type>
        <definition>std::vector&lt; Patch * &gt; ModelFactory::create_patches</definition>
        <argsstring>(Model *model, LifeParams life, std::vector&lt; Point &gt; coords={})</argsstring>
        <name>create_patches</name>
        <qualifiedname>ModelFactory::create_patches</qualifiedname>
        <param>
          <type><ref refid="class_model" kindref="compound">Model</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="struct_life_params" kindref="compound">LifeParams</ref></type>
          <declname>life</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="struct_point" kindref="compound">Point</ref> &gt;</type>
          <declname>coords</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ModelFactory.cpp" line="6" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_model_factory_1aacb94aaada7ccef7413a3b9d5cefa73a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_aestivation" kindref="compound">Aestivation</ref> *</type>
        <definition>Aestivation * ModelFactory::create_aestivation</definition>
        <argsstring>(AestivationParams aes, int sites_size)</argsstring>
        <name>create_aestivation</name>
        <qualifiedname>ModelFactory::create_aestivation</qualifiedname>
        <param>
          <type><ref refid="struct_aestivation_params" kindref="compound">AestivationParams</ref></type>
          <declname>aes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sites_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ModelFactory.cpp" line="7" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_model_factory_1a4ffecc59cbbac1831342e1c575cde58c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_dispersal" kindref="compound">Dispersal</ref> *</type>
        <definition>virtual Dispersal * ModelFactory::create_dispersal</definition>
        <argsstring>(DispersalType disp_type, double side) const =0</argsstring>
        <name>create_dispersal</name>
        <qualifiedname>ModelFactory::create_dispersal</qualifiedname>
        <reimplementedby refid="class_random_model_factory_1a843f07a03cf02b01f36a076926e0bc8e">create_dispersal</reimplementedby>
        <param>
          <type><ref refid="constants_8h_1ac025f1e887ae43bed8cad7aff794c04a" kindref="member">DispersalType</ref></type>
          <declname>disp_type</declname>
        </param>
        <param>
          <type>double</type>
          <declname>side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ModelFactory.cpp" line="9" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_model_factory_1a75aa2ef2ce878d9ebd970987035b5f91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_g_d_release" kindref="compound">GDRelease</ref> *</type>
        <definition>virtual GDRelease * ModelFactory::create_gdrelease</definition>
        <argsstring>(ReleaseParams rel) const =0</argsstring>
        <name>create_gdrelease</name>
        <qualifiedname>ModelFactory::create_gdrelease</qualifiedname>
        <reimplementedby refid="class_random_model_factory_1a97c328ac7620a83f0390a1e2f4af8a63">create_gdrelease</reimplementedby>
        <param>
          <type><ref refid="struct_release_params" kindref="compound">ReleaseParams</ref></type>
          <declname>rel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ModelFactory.cpp" line="10" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_model_factory_1ae89bf0a85ae8aaa901117d7ec574a91c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_seasonality" kindref="compound">Seasonality</ref> *</type>
        <definition>virtual Seasonality * ModelFactory::create_seasonality</definition>
        <argsstring>() const =0</argsstring>
        <name>create_seasonality</name>
        <qualifiedname>ModelFactory::create_seasonality</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ModelFactory.cpp" line="11" column="25"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ModelFactory</label>
        <link refid="class_model_factory"/>
      </node>
      <node id="2">
        <label>RandomModelFactory</label>
        <link refid="class_random_model_factory"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ModelFactory</label>
        <link refid="class_model_factory"/>
      </node>
    </collaborationgraph>
    <location file="src/ModelFactory.cpp" line="4" column="1" bodyfile="src/ModelFactory.cpp" bodystart="4" bodyend="12"/>
    <listofallmembers>
      <member refid="class_model_factory_1aacb94aaada7ccef7413a3b9d5cefa73a" prot="public" virt="non-virtual"><scope>ModelFactory</scope><name>create_aestivation</name></member>
      <member refid="class_model_factory_1a4ffecc59cbbac1831342e1c575cde58c" prot="public" virt="pure-virtual"><scope>ModelFactory</scope><name>create_dispersal</name></member>
      <member refid="class_model_factory_1a75aa2ef2ce878d9ebd970987035b5f91" prot="public" virt="pure-virtual"><scope>ModelFactory</scope><name>create_gdrelease</name></member>
      <member refid="class_model_factory_1a426d446bda5d5894245f3c5a9f743805" prot="public" virt="non-virtual"><scope>ModelFactory</scope><name>create_patches</name></member>
      <member refid="class_model_factory_1ae89bf0a85ae8aaa901117d7ec574a91c" prot="public" virt="pure-virtual"><scope>ModelFactory</scope><name>create_seasonality</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
