<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="_model_factory_8cpp" kind="file" language="C++">
    <compoundname>ModelFactory.cpp</compoundname>
    <includes local="no">memory</includes>
    <includes refid="_dispersal_8h" local="yes">Dispersal.h</includes>
    <incdepgraph>
      <node id="11">
        <label>Aestivation.h</label>
        <link refid="_aestivation_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>BoundaryStrategy.h</label>
        <link refid="_boundary_strategy_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Dispersal.h</label>
        <link refid="_dispersal_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>GDRelease.h</label>
        <link refid="_g_d_release_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Model.h</label>
        <link refid="_model_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Params.h</label>
        <link refid="_params_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Patch.h</label>
        <link refid="_patch_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Point.h</label>
        <link refid="_point_8h"/>
      </node>
      <node id="13">
        <label>Seasonality.h</label>
        <link refid="_seasonality_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>constants.h</label>
        <link refid="constants_8h"/>
      </node>
      <node id="1">
        <label>src/ModelFactory.cpp</label>
        <link refid="_model_factory_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>array</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_model_factory" prot="public">ModelFactory</innerclass>
    <innerclass refid="class_random_model_factory" prot="public">RandomModelFactory</innerclass>
    <innerclass refid="class_model_builder" prot="public">ModelBuilder</innerclass>
    <innerclass refid="class_random_model_builder" prot="public">RandomModelBuilder</innerclass>
    <innerclass refid="class_real_model_builder" prot="public">RealModelBuilder</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_dispersal_8h" kindref="compound">Dispersal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_model_factory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_model_factory" kindref="compound">ModelFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Patch*&gt;<sp/><ref refid="class_model_factory_1a426d446bda5d5894245f3c5a9f743805" kindref="member">create_patches</ref>(<ref refid="class_model" kindref="compound">Model</ref>*<sp/>model,<sp/><ref refid="struct_life_params" kindref="compound">LifeParams</ref><sp/>life,<sp/><sp/>std::vector&lt;Point&gt;<sp/>coords<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_aestivation" kindref="compound">Aestivation</ref>*<sp/><ref refid="class_model_factory_1aacb94aaada7ccef7413a3b9d5cefa73a" kindref="member">create_aestivation</ref>(<ref refid="struct_aestivation_params" kindref="compound">AestivationParams</ref><sp/>aes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sites_size);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_dispersal" kindref="compound">Dispersal</ref>*<sp/><ref refid="class_model_factory_1a4ffecc59cbbac1831342e1c575cde58c" kindref="member">create_dispersal</ref>(<ref refid="constants_8h_1ac025f1e887ae43bed8cad7aff794c04a" kindref="member">DispersalType</ref><sp/>disp_type,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>side)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_g_d_release" kindref="compound">GDRelease</ref>*<sp/><ref refid="class_model_factory_1a75aa2ef2ce878d9ebd970987035b5f91" kindref="member">create_gdrelease</ref>(<ref refid="struct_release_params" kindref="compound">ReleaseParams</ref><sp/>rel)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_seasonality" kindref="compound">Seasonality</ref>*<sp/><ref refid="class_model_factory_1ae89bf0a85ae8aaa901117d7ec574a91c" kindref="member">create_seasonality</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">};</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_random_model_factory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_random_model_factory" kindref="compound">RandomModelFactory</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_model_factory" kindref="compound">ModelFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_dispersal" kindref="compound">Dispersal</ref>*<sp/><ref refid="class_random_model_factory_1a843f07a03cf02b01f36a076926e0bc8e" kindref="member">create_dispersal</ref>(<ref refid="constants_8h_1ac025f1e887ae43bed8cad7aff794c04a" kindref="member">DispersalType</ref><sp/>disp_type,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>side)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_g_d_release" kindref="compound">GDRelease</ref>*<sp/><ref refid="class_random_model_factory_1a97c328ac7620a83f0390a1e2f4af8a63" kindref="member">create_gdrelease</ref>(<ref refid="struct_release_params" kindref="compound">ReleaseParams</ref><sp/>rel)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_seasonality" kindref="compound">Seasonality</ref>*<sp/><ref refid="class_model_factory_1ae89bf0a85ae8aaa901117d7ec574a91c" kindref="member">create_seasonality</ref>(<ref refid="struct_sine_rainfall_params" kindref="compound">SineRainfallParams</ref><sp/>season)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_model_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_model_builder" kindref="compound">ModelBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_model_builder_1a04d5ef28c9994fea2488d9afae1b6004" kindref="member">ModelBuilder</ref>(<ref refid="struct_model_params" kindref="compound">ModelParams</ref>*<sp/>params,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a0_mean,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a0_var,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;std::array&lt;std::array<sp/>&lt;double,<sp/>constants::num_gen&gt;,<sp/><ref refid="namespaceconstants_1aaff2693551946e51a92ed8115c3be3e5" kindref="member">constants::num_gen</ref>&gt;,<sp/><ref refid="namespaceconstants_1aaff2693551946e51a92ed8115c3be3e5" kindref="member">constants::num_gen</ref>&gt;<sp/>&amp;inher_frac);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_model_builder_1a24225573b0348c3c3dbd3cd9e5602793" kindref="member">build_patches</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_model_builder_1aaa8e57182529ea42eb3add0900e3c9e8" kindref="member">build_aestivation</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sites_size);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_model_builder_1a4e7fb8fa223f4c4143733329d65e23e9" kindref="member">build_dispersal</ref>(<ref refid="constants_8h_1ac025f1e887ae43bed8cad7aff794c04a" kindref="member">DispersalType</ref><sp/>disp_type)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_model_builder_1affc43c686018e57d4067d29fd740deb2" kindref="member">build_gdrelease</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_model_builder_1a3d73625741ed15e14954c9c09370ed81" kindref="member">build_seasonality</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Model&gt;<sp/><ref refid="class_model_builder_1a9a7be468dafcc59208ad0d107ca00123" kindref="member">get_result</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_random_model_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_random_model_builder" kindref="compound">RandomModelBuilder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_model_builder" kindref="compound">ModelBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_random_model_builder_1a6025caf03bca20165839ea62d2677252" kindref="member">RandomModelBuilder</ref>(<ref refid="struct_model_params" kindref="compound">ModelParams</ref>*<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref><sp/>=<sp/>std::make_unique&lt;Model&gt;(pars);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_random_model_builder_1a05ffeb9bdab1fc5f9a13cbc0c7fe0943" kindref="member">params</ref><sp/>=<sp/>pars;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_random_model_builder_1aebcd45b5f6462663fa1806c3fb60d71e" kindref="member">build_patches</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;Patch&gt;&gt;<sp/>sites;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="class_random_model_builder_1a05ffeb9bdab1fc5f9a13cbc0c7fe0943" kindref="member">params</ref>-&gt;<ref refid="struct_model_params_1a53c7cd827ceb1f96a1e4ffd850efc096" kindref="member">area</ref>-&gt;<ref refid="struct_area_params_1ae2dcd6b60485cc3a2f54b70355987385" kindref="member">num_pat</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sites.push_back(std::make_unique&lt;Patch&gt;(<ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>,<sp/><ref refid="class_random_model_builder_1a05ffeb9bdab1fc5f9a13cbc0c7fe0943" kindref="member">params</ref>-&gt;<ref refid="struct_model_params_1ae0c846a42a36f1e6bc6eccb35bf55763" kindref="member">life</ref>,<sp/><ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>-&gt;alpha0(),<sp/><ref refid="class_random_model_builder_1a05ffeb9bdab1fc5f9a13cbc0c7fe0943" kindref="member">params</ref>-&gt;<ref refid="struct_model_params_1a53c7cd827ceb1f96a1e4ffd850efc096" kindref="member">area</ref>-&gt;<ref refid="struct_area_params_1a25bc9f9baa5f3b4f9352101dfec36a99" kindref="member">side</ref>));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>-&gt;add_sites(sites))<sp/>{}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_random_model_builder_1a8d278b71452c10e2df417f453c728aee" kindref="member">build_dispersal</ref>(<ref refid="constants_8h_1ac025f1e887ae43bed8cad7aff794c04a" kindref="member">DispersalType</ref><sp/>disp_type)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disp_type<sp/>==<sp/><ref refid="constants_8h_1ac025f1e887ae43bed8cad7aff794c04aa3d3f3ea532b62c38af7090a0421187cf" kindref="member">DistanceKernel</ref>)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>-&gt;dispersal<sp/>=<sp/>std::make_unique&lt;DistanceKernelDispersal&gt;(<ref refid="class_random_model_builder_1a05ffeb9bdab1fc5f9a13cbc0c7fe0943" kindref="member">params</ref>-&gt;<ref refid="struct_model_params_1a3bdf0759e5b47d434f45982452a39b81" kindref="member">disp</ref>,<sp/><ref refid="constants_8h_1af75d5dd7322fa39ed0af4e7839e600f8ab937327ce1842198af32bc41177a231d" kindref="member">Toroid</ref>,<sp/><ref refid="class_random_model_builder_1a05ffeb9bdab1fc5f9a13cbc0c7fe0943" kindref="member">params</ref>-&gt;<ref refid="struct_model_params_1a53c7cd827ceb1f96a1e4ffd850efc096" kindref="member">area</ref>-&gt;<ref refid="struct_area_params_1a25bc9f9baa5f3b4f9352101dfec36a99" kindref="member">side</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disp_type<sp/>==<sp/><ref refid="constants_8h_1ac025f1e887ae43bed8cad7aff794c04aa3709dd357d0541fa8a1fc6b2238fa583" kindref="member">Radial</ref>)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>-&gt;dispersal<sp/>=<sp/>std::make_unique&lt;RadialDispersal&gt;(<ref refid="class_random_model_builder_1a05ffeb9bdab1fc5f9a13cbc0c7fe0943" kindref="member">params</ref>-&gt;<ref refid="struct_model_params_1a3bdf0759e5b47d434f45982452a39b81" kindref="member">disp</ref>,<sp/><ref refid="constants_8h_1af75d5dd7322fa39ed0af4e7839e600f8ab937327ce1842198af32bc41177a231d" kindref="member">Toroid</ref>,<sp/><ref refid="class_random_model_builder_1a05ffeb9bdab1fc5f9a13cbc0c7fe0943" kindref="member">params</ref>-&gt;<ref refid="struct_model_params_1a53c7cd827ceb1f96a1e4ffd850efc096" kindref="member">area</ref>-&gt;<ref refid="struct_area_params_1a25bc9f9baa5f3b4f9352101dfec36a99" kindref="member">side</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_random_model_builder_1a58102e92667163768086ea362ca44422" kindref="member">build_gdrelease</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>-&gt;gd_release<sp/>=<sp/>std::make_unique&lt;RandomGDRelease&gt;(<ref refid="class_random_model_builder_1a05ffeb9bdab1fc5f9a13cbc0c7fe0943" kindref="member">params</ref>-&gt;<ref refid="struct_model_params_1a77b9b6eab4e2185ef28937f8a438f08d" kindref="member">rel</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_model_builder_1a3d73625741ed15e14954c9c09370ed81" kindref="member">build_seasonality</ref>(<ref refid="struct_sine_rainfall_params" kindref="compound">SineRainfallParams</ref><sp/><ref refid="class_random_model_builder_1a05ffeb9bdab1fc5f9a13cbc0c7fe0943" kindref="member">params</ref>)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>-&gt;seasonality<sp/>=<sp/>std::make_unique&lt;SineRainfall&gt;(<ref refid="class_random_model_builder_1a05ffeb9bdab1fc5f9a13cbc0c7fe0943" kindref="member">params</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Model&gt;<sp/><ref refid="class_random_model_builder_1a3f311fe902b81e9e2643186d5093e603" kindref="member">get_result</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>-&gt;dispersal<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>-&gt;gd_release<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>-&gt;seasonality<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!(<ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>-&gt;sites).empty())<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(<ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Model&gt;<sp/><ref refid="class_random_model_builder_1a18f7d0fd9093b5efe6cba1fd738a4d46" kindref="member">model</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_model_params" kindref="compound">ModelParams</ref>*<sp/><ref refid="class_random_model_builder_1a05ffeb9bdab1fc5f9a13cbc0c7fe0943" kindref="member">params</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_real_model_builder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_real_model_builder" kindref="compound">RealModelBuilder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_model_builder" kindref="compound">ModelBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_model_builder_1a24225573b0348c3c3dbd3cd9e5602793" kindref="member">build_patches</ref>(std::vector&lt;Point&gt;<sp/>coords)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>params-&gt;area-&gt;num_pat;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_patch" kindref="compound">Patch</ref>*<sp/>pp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_patch" kindref="compound">Patch</ref>(<ref refid="class_real_model_builder_1a5c8beaec98fe6708dd59fda88985f9fb" kindref="member">model</ref>,<sp/>params-&gt;life,<sp/><ref refid="class_real_model_builder_1a5c8beaec98fe6708dd59fda88985f9fb" kindref="member">model</ref>-&gt;alpha0(),<sp/>coords[i]);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_real_model_builder_1a5c8beaec98fe6708dd59fda88985f9fb" kindref="member">model</ref>-&gt;add_site(pp);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_real_model_builder_1a5bf208e334d5d25b90609010296adc31" kindref="member">build_dispersal</ref>(<ref refid="constants_8h_1ac025f1e887ae43bed8cad7aff794c04a" kindref="member">DispersalType</ref><sp/>disp_type)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disp_type<sp/>==<sp/><ref refid="constants_8h_1ac025f1e887ae43bed8cad7aff794c04aa3d3f3ea532b62c38af7090a0421187cf" kindref="member">DistanceKernel</ref>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_real_model_builder_1a5c8beaec98fe6708dd59fda88985f9fb" kindref="member">model</ref>-&gt;dispersal<sp/>=<sp/>std::make_unique&lt;DistanceKernelDispersal&gt;(params-&gt;disp,<sp/><ref refid="constants_8h_1af75d5dd7322fa39ed0af4e7839e600f8a7f0bc3a17ff45e6a7c3fe52b35db1888" kindref="member">Edge</ref>,<sp/>params-&gt;area-&gt;side);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disp_type<sp/>==<sp/><ref refid="constants_8h_1ac025f1e887ae43bed8cad7aff794c04aa3709dd357d0541fa8a1fc6b2238fa583" kindref="member">Radial</ref>)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_real_model_builder_1a5c8beaec98fe6708dd59fda88985f9fb" kindref="member">model</ref>-&gt;dispersal<sp/>=<sp/>std::make_unique&lt;RadialDispersal&gt;(params-&gt;disp,<sp/><ref refid="constants_8h_1af75d5dd7322fa39ed0af4e7839e600f8a7f0bc3a17ff45e6a7c3fe52b35db1888" kindref="member">Edge</ref>,<sp/>params-&gt;area-&gt;side);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_model_builder_1affc43c686018e57d4067d29fd740deb2" kindref="member">build_gdrelease</ref>(std::vector&lt;int&gt;<sp/>rel_sites,<sp/>std::vector&lt;Patch*&gt;<sp/>sites)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_real_model_builder_1a5c8beaec98fe6708dd59fda88985f9fb" kindref="member">model</ref>-&gt;gd_release<sp/>=<sp/>std::make_unique&lt;SchedGDRelease&gt;(params-&gt;rel,<sp/>rel_sites,<sp/>sites);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_model_builder_1a3d73625741ed15e14954c9c09370ed81" kindref="member">build_seasonality</ref>(<ref refid="struct_input_rainfall_params" kindref="compound">InputRainfallParams</ref><sp/>params)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_real_model_builder_1a5c8beaec98fe6708dd59fda88985f9fb" kindref="member">model</ref>-&gt;seasonality<sp/>=<sp/>std::make_unique&lt;InputRainfall&gt;(params);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Model&gt;<sp/><ref refid="class_real_model_builder_1a7ee0bb8036e46d47eb7a01ee0fca5a74" kindref="member">get_result</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(<ref refid="class_real_model_builder_1a5c8beaec98fe6708dd59fda88985f9fb" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Model&gt;<sp/><ref refid="class_real_model_builder_1a5c8beaec98fe6708dd59fda88985f9fb" kindref="member">model</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_model_params" kindref="compound">ModelParams</ref>*<sp/>params</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="src/ModelFactory.cpp"/>
  </compounddef>
</doxygen>
